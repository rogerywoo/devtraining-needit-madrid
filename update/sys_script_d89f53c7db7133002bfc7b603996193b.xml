<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_58872_needit_needit">u_requested_forVALCHANGES^EQ<item endquery="false" field="u_requested_for" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Display All Open Requests</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

        // 1. Create an object to store rows from a table
        var grNeedIt = new GlideRecord('x_58872_needit_needit');

	
        // 2. Build query
        grNeedIt.addQuery('active', true);
        grNeedIt.addQuery('u_requested_for', current.u_requested_for);

        // 3. Execute query 
        grNeedIt.query();

        // Initialize message to list Caller's active Incidents
        var msg = "Caller's other active incidents: ";

        // 4. Process returned records
        while(grNeedIt.next()){
            // add a new line to the message for each of the Caller's active Incidents
            msg = msg + grNeedIt.getValue('number') + ": " + grNeedIt.getValue('short_description') + " | ";
        }

        gs.addInfoMessage(msg);

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>roger.woo</sys_created_by>
        <sys_created_on>2019-06-07 14:36:38</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d89f53c7db7133002bfc7b603996193b</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Display All Open Requests</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_d89f53c7db7133002bfc7b603996193b</sys_update_name>
        <sys_updated_by>roger.woo</sys_updated_by>
        <sys_updated_on>2019-06-07 15:29:56</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d89f53c7db7133002bfc7b603996193b"/>
</record_update>
